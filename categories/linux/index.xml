<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on The way to be a master</title>
    <link>https://luciferseva.github.io/categories/linux/</link>
    <description>Recent content in linux on The way to be a master</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://luciferseva.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux 网络协议栈开发（一）ping命令</title>
      <link>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BC%80%E5%8F%91%E4%B8%80ping%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BC%80%E5%8F%91%E4%B8%80ping%E5%91%BD%E4%BB%A4/</guid>
      <description>&lt;p&gt;linux网络开发中比较常用的命令之一是ping，我们通常使用了ping命令加上要ping通的ip地址来进行分析，通过能否ping通指定ip或域名来检测网络连接是否成功，和连接质量。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 网络协议栈开发（二）list_head结构体</title>
      <link>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BC%80%E5%8F%91%E4%BA%8Clist_head%E7%BB%93%E6%9E%84%E4%BD%93/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E6%A0%88%E5%BC%80%E5%8F%91%E4%BA%8Clist_head%E7%BB%93%E6%9E%84%E4%BD%93/</guid>
      <description>&lt;p&gt;在Linux内核中，提供了一个用来创建双向循环链表的结构 list_head。虽然linux内核是用C语言写的，但是list_head的引入，使得内核数据结构也可以拥有面向对象的特性，通过使用操作list_head 的通用接口很容易实现代码的重用，有点类似于C++的继承机制（希望有机会写篇文章研究一下C语言的面向对象机制）。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 网络设备驱动开发（三）</title>
      <link>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B8%89/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B8%89/</guid>
      <description>&lt;p&gt;网络上对于网络层协议的介绍一般都是七层的 OSI（Open Systems Interconnection）模型，但是其实在linux网络应用开发中，对 Linux 中基本网络栈的介绍可以分为 &lt;strong&gt;四层&lt;/strong&gt;的 Internet 模型&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 网络设备驱动开发（二）</title>
      <link>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E4%BA%8C/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E4%BA%8C/</guid>
      <description>&lt;p&gt;网络上对于网络层协议的介绍一般都是七层的 OSI（Open Systems Interconnection）模型，但是其实在linux网络应用开发中，对 Linux 中基本网络栈的介绍可以分为 &lt;strong&gt;四层&lt;/strong&gt;的 Internet 模型&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sdio-wifi详解</title>
      <link>https://luciferseva.github.io/2019/10/sdio-wifi%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luciferseva.github.io/2019/10/sdio-wifi%E8%AF%A6%E8%A7%A3/</guid>
      <description>&lt;p&gt;SDIO-Wifi模块是基于SDIO接口的符合wifi无线网络标准的嵌入式模块，内置无线网络协议IEEE802.11协议栈以及TCP/IP协议栈，能够实现用户主平台数据通过SDIO口到无线网络之间的转换。SDIO具有传输数据快，兼容SD、MMC接口等特点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>进程、线程区别</title>
      <link>https://luciferseva.github.io/2019/10/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luciferseva.github.io/2019/10/%E8%BF%9B%E7%A8%8B%E7%BA%BF%E7%A8%8B%E5%8C%BA%E5%88%AB/</guid>
      <description>&lt;p&gt;进程（process）和线程（thread）是操作系统的基本概念，但是它们比较抽象，不容易掌握。
最近，我读到一篇博客，发现有一个很好的类比，可以把它们解释地清晰易懂。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 网络设备驱动开发（一）</title>
      <link>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B8%80/</link>
      <pubDate>Thu, 24 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luciferseva.github.io/2019/10/linux-%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E4%B8%80/</guid>
      <description>&lt;p&gt;Linux内核对网络驱动程序使用统一的接口，并且对于网络设备采用面向对象的思想设计。&lt;/p&gt;

&lt;p&gt;Linux内核采用分层结构处理网络数据包。分层结构与网络协议的结构匹配，既能简化数据包处理流程，又便于扩展和维护。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>